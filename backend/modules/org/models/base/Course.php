<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\org\models\base;

use Yii;

/**
 * This is the base-model class for table "course".
 *
 * @property integer $course_id
 * @property integer $org_id
 * @property string $regulation
 * @property string $title
 * @property string $descript
 *
 * @property \backend\modules\org\models\Organization $org
 * @property \backend\modules\org\models\UserCourse[] $userCourses
 * @property string $aliasModel
 */
abstract class Course extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const REGULATION_JSPARTA = 'JSparta';
    const REGULATION_SPARTA = 'Sparta';
    const REGULATION_VACATION = 'Vacation';
    var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'course';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['org_id'], 'integer'],
            [['regulation'], 'string'],
            [['title', 'descript'], 'string', 'max' => 255],
            [['org_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\org\models\Organization::className(), 'targetAttribute' => ['org_id' => 'org_id']],
            ['regulation', 'in', 'range' => [
                    self::REGULATION_JSPARTA,
                    self::REGULATION_SPARTA,
                    self::REGULATION_VACATION,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'course_id' => Yii::t('models', 'Course ID'),
            'org_id' => Yii::t('models', 'Org ID'),
            'regulation' => Yii::t('models', 'Regulation'),
            'title' => Yii::t('models', 'Title'),
            'descript' => Yii::t('models', 'Descript'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'org_id' => Yii::t('models', '校区'),
            'regulation' => Yii::t('models', '生活模式'),
            'title' => Yii::t('models', '课程'),
            'descript' => Yii::t('models', '课程描述'),
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getOrg()
    {
        return $this->hasOne(\backend\modules\org\models\Organization::className(), ['org_id' => 'org_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserCourses()
    {
        return $this->hasMany(\backend\modules\org\models\UserCourse::className(), ['course_id' => 'course_id']);
    }


    
    /**
     * @inheritdoc
     * @return \backend\modules\org\models\query\CourseQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\modules\org\models\query\CourseQuery(get_called_class());
    }


    /**
     * get column regulation enum value label
     * @param string $value
     * @return string
     */
    public static function getRegulationValueLabel($value){
        $labels = self::optsRegulation();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column regulation ENUM value labels
     * @return array
     */
    public static function optsRegulation()
    {
        return [
            self::REGULATION_JSPARTA => Yii::t('models', 'J Sparta'),
            self::REGULATION_SPARTA => Yii::t('models', 'Sparta'),
            self::REGULATION_VACATION => Yii::t('models', 'Vacation'),
        ];
    }

}
