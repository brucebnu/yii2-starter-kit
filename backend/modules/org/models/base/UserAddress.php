<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\org\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "user_address".
 *
 * @property integer $user_address_id
 * @property integer $user_id
 * @property integer $country
 * @property integer $province
 * @property integer $city
 * @property integer $region
 * @property integer $town
 * @property integer $sort
 * @property string $detailed
 * @property string $consignee
 * @property string $gender
 * @property string $phone_number
 * @property string $email
 * @property double $longitude
 * @property double $latitude
 * @property string $alias
 * @property string $status
 * @property integer $created_at
 * @property integer $updated_at
 *
 * @property \backend\modules\org\models\OrgUser $user
 * @property \backend\modules\org\models\UserExpress[] $userExpresses
 * @property string $aliasModel
 */
abstract class UserAddress extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const GENDER_MALE = 'male';
    const GENDER_FEMALE = 'female';
    const STATUS_OPEN = 'open';
    const STATUS_CLOSE = 'close';
    var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'user_address';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id', 'detailed', 'consignee', 'gender'], 'required'],
            [['user_id', 'country', 'province', 'city', 'region', 'town', 'sort'], 'integer'],
            [['gender', 'status'], 'string'],
            [['longitude', 'latitude'], 'number'],
            [['detailed', 'email', 'alias'], 'string', 'max' => 255],
            [['consignee'], 'string', 'max' => 32],
            [['phone_number'], 'string', 'max' => 16],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\org\models\OrgUser::className(), 'targetAttribute' => ['user_id' => 'user_id']],
            ['gender', 'in', 'range' => [
                    self::GENDER_MALE,
                    self::GENDER_FEMALE,
                ]
            ],
            ['status', 'in', 'range' => [
                    self::STATUS_OPEN,
                    self::STATUS_CLOSE,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'user_address_id' => Yii::t('models', 'User Address ID'),
            'user_id' => Yii::t('models', 'User ID'),
            'country' => Yii::t('models', 'Country'),
            'province' => Yii::t('models', 'Province'),
            'city' => Yii::t('models', 'City'),
            'region' => Yii::t('models', 'Region'),
            'town' => Yii::t('models', 'Town'),
            'sort' => Yii::t('models', 'Sort'),
            'detailed' => Yii::t('models', 'Detailed'),
            'consignee' => Yii::t('models', 'Consignee'),
            'gender' => Yii::t('models', 'Gender'),
            'phone_number' => Yii::t('models', 'Phone Number'),
            'email' => Yii::t('models', 'Email'),
            'longitude' => Yii::t('models', 'Longitude'),
            'latitude' => Yii::t('models', 'Latitude'),
            'alias' => Yii::t('models', 'Alias'),
            'status' => Yii::t('models', 'Status'),
            'created_at' => Yii::t('models', 'Created At'),
            'updated_at' => Yii::t('models', 'Updated At'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'user_id' => Yii::t('models', '用户'),
            'country' => Yii::t('models', '国家'),
            'province' => Yii::t('models', 'Province'),
            'city' => Yii::t('models', 'City'),
            'region' => Yii::t('models', 'Region'),
            'town' => Yii::t('models', 'Town'),
            'sort' => Yii::t('models', '排序'),
            'detailed' => Yii::t('models', '地址详情'),
            'consignee' => Yii::t('models', '收件人'),
            'gender' => Yii::t('models', '性别'),
            'phone_number' => Yii::t('models', '手机'),
            'email' => Yii::t('models', 'Email'),
            'longitude' => Yii::t('models', '经度'),
            'latitude' => Yii::t('models', '维度'),
            'alias' => Yii::t('models', '别名'),
            'status' => Yii::t('models', '状态'),
            'created_at' => Yii::t('models', '创建'),
            'updated_at' => Yii::t('models', '更新'),
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\backend\modules\org\models\OrgUser::className(), ['user_id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserExpresses()
    {
        return $this->hasMany(\backend\modules\org\models\UserExpress::className(), ['user_address_id' => 'user_address_id']);
    }


    
    /**
     * @inheritdoc
     * @return \backend\modules\org\models\query\UserAddressQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\modules\org\models\query\UserAddressQuery(get_called_class());
    }


    /**
     * get column gender enum value label
     * @param string $value
     * @return string
     */
    public static function getGenderValueLabel($value){
        $labels = self::optsGender();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column gender ENUM value labels
     * @return array
     */
    public static function optsGender()
    {
        return [
            self::GENDER_MALE => Yii::t('models', 'Male'),
            self::GENDER_FEMALE => Yii::t('models', 'Female'),
        ];
    }

    /**
     * get column status enum value label
     * @param string $value
     * @return string
     */
    public static function getStatusValueLabel($value){
        $labels = self::optsStatus();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column status ENUM value labels
     * @return array
     */
    public static function optsStatus()
    {
        return [
            self::STATUS_OPEN => Yii::t('models', 'Open'),
            self::STATUS_CLOSE => Yii::t('models', 'Close'),
        ];
    }

}
