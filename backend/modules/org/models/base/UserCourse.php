<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\org\models\base;

use Yii;

/**
 * This is the base-model class for table "user_course".
 *
 * @property integer $org_user_course_id
 * @property integer $org_id
 * @property integer $user_id
 * @property integer $course_id
 * @property string $period_week
 * @property integer $started_at
 * @property integer $ended_at
 *
 * @property \backend\modules\org\models\Course $course
 * @property \backend\modules\org\models\Organization $user
 * @property \backend\modules\org\models\OrgUser $user0
 * @property string $aliasModel
 */
abstract class UserCourse extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'user_course';
    }

    /**
     * @return \yii\db\Connection the database connection used by this AR class.
     */
    public static function getDb()
    {
        return Yii::$app->get('org');
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['org_id', 'user_id', 'course_id', 'period_week'], 'required'],
            [['org_id', 'user_id', 'course_id', 'started_at', 'ended_at'], 'integer'],
            [['period_week'], 'string', 'max' => 255],
            [['course_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\org\models\Course::className(), 'targetAttribute' => ['course_id' => 'course_id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\org\models\Organization::className(), 'targetAttribute' => ['user_id' => 'org_id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\org\models\OrgUser::className(), 'targetAttribute' => ['user_id' => 'user_id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'org_user_course_id' => Yii::t('backend', 'Org User Course ID'),
            'org_id' => Yii::t('backend', 'Org ID'),
            'user_id' => Yii::t('backend', 'User ID'),
            'course_id' => Yii::t('backend', 'Course ID'),
            'period_week' => Yii::t('backend', 'Period Week'),
            'started_at' => Yii::t('backend', 'Started At'),
            'ended_at' => Yii::t('backend', 'Ended At'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'org_user_course_id' => Yii::t('backend', 'ID'),
            'org_id' => Yii::t('backend', '学校'),
            'user_id' => Yii::t('backend', '学生'),
            'course_id' => Yii::t('backend', '课件'),
            'period_week' => Yii::t('backend', '几周'),
            'started_at' => Yii::t('backend', '开始'),
            'ended_at' => Yii::t('backend', '结束'),
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getCourse()
    {
        return $this->hasOne(\backend\modules\org\models\Course::className(), ['course_id' => 'course_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\backend\modules\org\models\Organization::className(), ['org_id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser0()
    {
        return $this->hasOne(\backend\modules\org\models\OrgUser::className(), ['user_id' => 'user_id']);
    }


    
    /**
     * @inheritdoc
     * @return \backend\modules\org\models\query\UserCourseQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\modules\org\models\query\UserCourseQuery(get_called_class());
    }


}
