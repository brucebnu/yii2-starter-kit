<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\org\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "user_express".
 *
 * @property integer $express_id
 * @property integer $user_id
 * @property integer $user_address_id
 * @property string $express_title
 * @property string $express_no
 * @property string $express_info_url
 * @property string $express_type
 * @property integer $completion_time
 * @property integer $updated_at
 * @property integer $created_at
 *
 * @property \backend\modules\org\models\UserAddress $userAddress
 * @property \backend\modules\org\models\UserOrg $user
 * @property string $aliasModel
 */
abstract class UserExpress extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const EXPRESS_TYPE_VISA = 'visa';
    var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'user_express';
    }

    /**
     * @return \yii\db\Connection the database connection used by this AR class.
     */
    public static function getDb()
    {
        return Yii::$app->get('org');
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::class,
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id', 'user_address_id', 'completion_time'], 'integer'],
            [['express_type'], 'string'],
            [['express_title', 'express_no', 'express_info_url'], 'string', 'max' => 255],
            [['user_address_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\org\models\UserAddress::className(), 'targetAttribute' => ['user_address_id' => 'user_address_id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => \backend\modules\org\models\UserOrg::className(), 'targetAttribute' => ['user_id' => 'user_id']],
            ['express_type', 'in', 'range' => [
                    self::EXPRESS_TYPE_VISA,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'express_id' => Yii::t('models', 'Express ID'),
            'user_id' => Yii::t('models', 'User ID'),
            'user_address_id' => Yii::t('models', 'User Address ID'),
            'express_title' => Yii::t('models', 'Express Title'),
            'express_no' => Yii::t('models', 'Express No'),
            'express_info_url' => Yii::t('models', 'Express Info Url'),
            'express_type' => Yii::t('models', 'Express Type'),
            'completion_time' => Yii::t('models', 'Completion Time'),
            'updated_at' => Yii::t('models', 'Updated At'),
            'created_at' => Yii::t('models', 'Created At'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'user_id' => Yii::t('models', '用户'),
            'user_address_id' => Yii::t('models', '地址'),
            'express_title' => Yii::t('models', '快递名称'),
            'express_no' => Yii::t('models', '快递单号'),
            'express_info_url' => Yii::t('models', '查询地址'),
            'express_type' => Yii::t('models', '业务类型'),
            'completion_time' => Yii::t('models', '完成时间'),
            'updated_at' => Yii::t('models', '更新时间'),
            'created_at' => Yii::t('models', '创建时间'),
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserAddress()
    {
        return $this->hasOne(\backend\modules\org\models\UserAddress::className(), ['user_address_id' => 'user_address_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(\backend\modules\org\models\UserOrg::className(), ['user_id' => 'user_id']);
    }


    
    /**
     * @inheritdoc
     * @return \backend\modules\org\models\query\UserExpressQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\modules\org\models\query\UserExpressQuery(get_called_class());
    }


    /**
     * get column express_type enum value label
     * @param string $value
     * @return string
     */
    public static function getExpressTypeValueLabel($value){
        $labels = self::optsExpressType();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column express_type ENUM value labels
     * @return array
     */
    public static function optsExpressType()
    {
        return [
            self::EXPRESS_TYPE_VISA => Yii::t('models', 'Visa'),
        ];
    }

}
