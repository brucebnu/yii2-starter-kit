<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace backend\modules\org\models\base;

use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the base-model class for table "org_user".
 *
 * @property integer $user_id
 * @property string $passport_no
 * @property string $nationality
 * @property string $passport_full_Name
 * @property string $full_name
 * @property string $nick_name
 * @property string $gender
 * @property string $birthday
 * @property string $passport_src
 * @property resource $emergency_contact
 * @property string $phone_calling_code
 * @property integer $phone
 * @property string $phone_native_calling_code
 * @property integer $phone_native
 * @property string $linked_training
 * @property string $company_type
 * @property string $company_title
 * @property integer $created_at
 * @property integer $updated_at
 *
 * @property \backend\modules\org\models\UserAddress[] $userAddresses
 * @property \backend\modules\org\models\UserCourse[] $userCourses
 * @property \backend\modules\org\models\UserDormitory[] $userDormitories
 * @property \backend\modules\org\models\UserExpress[] $userExpresses
 * @property \backend\modules\org\models\UserFlight[] $userFlights
 * @property \backend\modules\org\models\UserToAgency[] $userToAgencies
 * @property \backend\modules\org\models\UserToOrg[] $userToOrgs
 * @property string $aliasModel
 */
abstract class OrgUser extends \yii\db\ActiveRecord
{



    /**
    * ENUM field values
    */
    const GENDER_MALE = 'male';
    const GENDER_FEMALE = 'female';
    const LINKED_TRAINING_YES = 'Yes';
    const LINKED_TRAINING_NO = 'No';
    const COMPANY_TYPE_INDIVIDUAL = 'Individual';
    const COMPANY_TYPE_SCHOOL = 'School';
    const COMPANY_TYPE_COMPANY = 'Company';
    var $enum_labels = false;
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'org_user';
    }

    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['user_id'], 'required'],
            [['user_id', 'phone', 'phone_native'], 'integer'],
            [['gender', 'linked_training', 'company_type'], 'string'],
            [['birthday'], 'safe'],
            [['passport_no', 'full_name', 'nick_name', 'passport_src', 'emergency_contact', 'company_title'], 'string', 'max' => 255],
            [['nationality'], 'string', 'max' => 32],
            [['passport_full_Name'], 'string', 'max' => 40],
            [['phone_calling_code', 'phone_native_calling_code'], 'string', 'max' => 8],
            [['user_id'], 'unique'],
            ['gender', 'in', 'range' => [
                    self::GENDER_MALE,
                    self::GENDER_FEMALE,
                ]
            ],
            ['linked_training', 'in', 'range' => [
                    self::LINKED_TRAINING_YES,
                    self::LINKED_TRAINING_NO,
                ]
            ],
            ['company_type', 'in', 'range' => [
                    self::COMPANY_TYPE_INDIVIDUAL,
                    self::COMPANY_TYPE_SCHOOL,
                    self::COMPANY_TYPE_COMPANY,
                ]
            ]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'user_id' => Yii::t('models', 'User ID'),
            'passport_no' => Yii::t('models', 'Passport No'),
            'nationality' => Yii::t('models', 'Nationality'),
            'passport_full_Name' => Yii::t('models', 'Passport Full Name'),
            'full_name' => Yii::t('models', 'Full Name'),
            'nick_name' => Yii::t('models', 'Nick Name'),
            'gender' => Yii::t('models', 'Gender'),
            'birthday' => Yii::t('models', 'Birthday'),
            'passport_src' => Yii::t('models', 'Passport Src'),
            'emergency_contact' => Yii::t('models', 'Emergency Contact'),
            'phone_calling_code' => Yii::t('models', 'Phone Calling Code'),
            'phone' => Yii::t('models', 'Phone'),
            'phone_native_calling_code' => Yii::t('models', 'Phone Native Calling Code'),
            'phone_native' => Yii::t('models', 'Phone Native'),
            'linked_training' => Yii::t('models', 'Linked Training'),
            'company_type' => Yii::t('models', 'Company Type'),
            'company_title' => Yii::t('models', 'Company Title'),
            'created_at' => Yii::t('models', 'Created At'),
            'updated_at' => Yii::t('models', 'Updated At'),
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeHints()
    {
        return array_merge(parent::attributeHints(), [
            'passport_no' => Yii::t('models', '护照号'),
            'nationality' => Yii::t('models', '国籍'),
            'passport_full_Name' => Yii::t('models', '护照全名'),
            'full_name' => Yii::t('models', '全名'),
            'nick_name' => Yii::t('models', '昵称'),
            'gender' => Yii::t('models', '性别'),
            'birthday' => Yii::t('models', '生日'),
            'passport_src' => Yii::t('models', '护照地址'),
            'emergency_contact' => Yii::t('models', '紧急联系人'),
            'phone_calling_code' => Yii::t('models', '国际区号'),
            'phone' => Yii::t('models', '手机号'),
            'phone_native_calling_code' => Yii::t('models', '国际区号'),
            'phone_native' => Yii::t('models', '游学手机号'),
            'linked_training' => Yii::t('models', '海外进修规划'),
            'company_type' => Yii::t('models', '公司类型'),
            'company_title' => Yii::t('models', '公司名称'),
            'created_at' => Yii::t('models', '创建时间'),
            'updated_at' => Yii::t('models', '更新时间'),
        ]);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserAddresses()
    {
        return $this->hasMany(\backend\modules\org\models\UserAddress::className(), ['user_id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserCourses()
    {
        return $this->hasMany(\backend\modules\org\models\UserCourse::className(), ['user_id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserDormitories()
    {
        return $this->hasMany(\backend\modules\org\models\UserDormitory::className(), ['user_id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserExpresses()
    {
        return $this->hasMany(\backend\modules\org\models\UserExpress::className(), ['user_id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserFlights()
    {
        return $this->hasMany(\backend\modules\org\models\UserFlight::className(), ['user_id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserToAgencies()
    {
        return $this->hasMany(\backend\modules\org\models\UserToAgency::className(), ['user_id' => 'user_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUserToOrgs()
    {
        return $this->hasMany(\backend\modules\org\models\UserToOrg::className(), ['user_id' => 'user_id']);
    }


    
    /**
     * @inheritdoc
     * @return \backend\modules\org\models\query\OrgUserQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \backend\modules\org\models\query\OrgUserQuery(get_called_class());
    }


    /**
     * get column gender enum value label
     * @param string $value
     * @return string
     */
    public static function getGenderValueLabel($value){
        $labels = self::optsGender();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column gender ENUM value labels
     * @return array
     */
    public static function optsGender()
    {
        return [
            self::GENDER_MALE => Yii::t('models', 'Male'),
            self::GENDER_FEMALE => Yii::t('models', 'Female'),
        ];
    }

    /**
     * get column linked_training enum value label
     * @param string $value
     * @return string
     */
    public static function getLinkedTrainingValueLabel($value){
        $labels = self::optsLinkedTraining();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column linked_training ENUM value labels
     * @return array
     */
    public static function optsLinkedTraining()
    {
        return [
            self::LINKED_TRAINING_YES => Yii::t('models', 'Yes'),
            self::LINKED_TRAINING_NO => Yii::t('models', 'No'),
        ];
    }

    /**
     * get column company_type enum value label
     * @param string $value
     * @return string
     */
    public static function getCompanyTypeValueLabel($value){
        $labels = self::optsCompanyType();
        if(isset($labels[$value])){
            return $labels[$value];
        }
        return $value;
    }

    /**
     * column company_type ENUM value labels
     * @return array
     */
    public static function optsCompanyType()
    {
        return [
            self::COMPANY_TYPE_INDIVIDUAL => Yii::t('models', 'Individual'),
            self::COMPANY_TYPE_SCHOOL => Yii::t('models', 'School'),
            self::COMPANY_TYPE_COMPANY => Yii::t('models', 'Company'),
        ];
    }

}
